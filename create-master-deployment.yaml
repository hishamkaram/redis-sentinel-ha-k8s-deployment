apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-ha-cluster-master-d1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-ha-cluster-redis-master-lbl
  template:
    metadata:
      name: redis-ha-cluster-master-p1
      labels:
        app: redis-ha-cluster-redis-master-lbl
        master: "true"
    spec:
      restartPolicy: Always
      tolerations:
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 100
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 100
        - key: node.kubernetes.io/memory-pressure
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 100
      initContainers:
        - name: disable-thp
          image: redis-sentinel-ha-cluster:1.0
          volumeMounts:
            - name: host-sys
              mountPath: /sys
          command:
            [
              "sh",
              "-c",
              "echo never >/sys/kernel/mm/transparent_hugepage/enabled;echo never > /sys/kernel/mm/transparent_hugepage/defrag",
            ]
          securityContext:
            privileged: true
      containers:
        - name: redis-ha-cluster-redis-c1
          image: redis-sentinel-ha-cluster:1.0
          resources:
            requests:
              memory: "100Mi"
              cpu: ".2"
            limits:
              memory: "16Gi"
              cpu: "2"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /redis-data
              name: redis-directory-binding
              readOnly: false
          env:
            - name: MASTER
              value: "true"
      volumes:
        - hostPath:
            path: /tmp/data/1
          name: redis-directory-binding
        - name: host-sys
          hostPath:
            path: /sys